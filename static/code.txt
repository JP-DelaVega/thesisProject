
const canvasElement = document.getElementsByClassName("canvas1")[0];
const canvasDraw = document.getElementsByClassName("canvas2")[0];

const canvasCtx = canvasElement.getContext("2d");
const draw = canvasDraw.getContext("2d");

const colorControl = document.getElementById("colorControl");
const PaintControl = document.getElementById("PaintControl");

const tipIds = [4, 8, 12, 16, 20];
let lmList = [];
let lmList_past = [];
let fingers = [];
let x1, x2, y1, y2;
let colorPaint = "#FF0000";
let Paint = true;

const w = parseInt(canvasDraw.width);
const h = parseInt(canvasDraw.height);

function onResults(results) {
    canvasCtx.save();

    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);

    canvasCtx.drawImage(
        results.image,
        0,
        0,
        canvasElement.width,
        canvasElement.height
    );

    if (results.multiHandLandmarks) {
        lmList_past = lmList;
        lmList = [];
        fingers = [];
        for (const landmarks of results.multiHandLandmarks) {
            drawConnectors(canvasCtx, landmarks, HAND_CONNECTIONS, {
                color: "#00FF00",
                lineWidth: 5,
            });
            drawLandmarks(canvasCtx, landmarks, { color: "#FF0000", lineWidth: 2 });
            lmList = landmarks;
        }

        if (lmList[4].x < lmList[3].x) {
            fingers.push(1);
        } else {
            fingers.push(0);
        }
        for (let i = 1; i < 5; i++) {
            if (lmList[tipIds[i]].y < lmList[tipIds[i] - 2].y) {
                fingers.push(1);
            } else {
                fingers.push(0);
            }
        }
        if (fingers[1] == 1 && fingers[2] == 1) {} else if (fingers[1] == 1 && fingers[2] == 0) {
            if (lmList_past.length == 0) {
                x1 = w * lmList[8].x;
                y1 = h * lmList[8].y;
                x2 = w * lmList[8].x;
                y2 = h * lmList[8].y;
            } else {
                x1 = w * lmList_past[8].x;
                y1 = h * lmList_past[8].y;
                x2 = w * lmList[8].x;
                y2 = h * lmList[8].y;
            }
            if (Paint == true) {
                LineDraw(draw, x1, y1, x2, y2);
            } else {
                draw.clearRect(x1, y1, x2, y2);
            }
        }
    }
}

function colorChange() {
    if (colorPaint == "#FF0000") {
        colorPaint = "#000000";
        colorControl.innerHTML = "Red";
    } else {
        colorPaint = "#FF0000";
        colorControl.innerHTML = "Black";
    }
}

function PaintChange() {
    if (Paint == true) {
        Paint = false;
        PaintControl.innerHTML = "Erase";
    } else {
        Paint = true;
        PaintControl.innerHTML = "Paint";
    }
    canvasCtx.restore();
}

function LineDraw(draw, x1, y1, x2, y2) {
    draw.strokeStyle = colorPaint;
    draw.lineWidth = 10;
    draw.beginPath();
    draw.moveTo(x1, y1);
    draw.lineTo(x2, y2);
    draw.stroke();
}
const hands = new Hands({
    locateFile: (file) => {
        return `https://cdn.jsdelivr.net/npm/@mediapipe/hands/${file}`;
    },
});
hands.setOptions({
    maxNumHands: 2,
    minDetectionConfidence: 0.5,
    minTrackingConfidence: 0.5,
});
hands.onResults(onResults);

const camera = new Camera(videoPlayer, {
    onFrame: async() => {
        await hands.send({ image: videoPlayer });
    },
    width: 1280,
    height: 720,
});
camera.start();

colorControl.addEventListener("click", colorChange);
PaintControl.addEventListener("click", PaintChange);



    <button id="colorControl">Black</button>
    <button id="PaintControl">Paint</button>
    <div class="wrapper">
        <canvas class="canvas1" width="1200" height="700" style="border: 2px solid black;"></canvas>
        <canvas class="canvas2" width="1200" height="700" style="border: 2px solid black;"></canvas>
    </div>

    
.wrapper {
    position: relative;
    width: 400px;
    height: 300px;
}

.wrapper canvas {
    position: absolute;
    top: 20;
    left: 0;
}

    </div>
    <div class="BottomMenu">
    </div>
    <div class="LeftMenu">
    </div>
    <div class="RightMenu">
    </div>
